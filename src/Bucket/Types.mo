import TrieMap "mo:base/TrieMap";

module{
    
    // The file is split into multiple chunks, this is one of chunks
    public type Chunk = {
        digest : [Nat8]; // the SHA256 of the data
        data : Blob; 
    };

    public type Asset = {
        file_key :  Text; 
        file_name : Text;
        file_extension : Text; // such like "jpg","mp3"
        total_size : Nat; // total file size
        page_field : [(Nat, Nat)]; // the location of the file,[(offset,size)],file -> [offset,offset+size)
    };

    public type AssetBuffer = {
        chunk_number : Nat;
        total_size : Nat;
        digest : [var Nat8]; 
        read_page_field : [(Nat, Nat)];
        write_page_field : [[(Nat, Nat)]];
        wrote_page : [var Bool];
        var received : Nat; 
    };

    public type AssetExt = {
        bucket_id : Principal; // canister where the file is located
        file_key : Text;
        file_name : Text;
        file_extension : Text;
        total_size : Nat;
        upload_status : Bool;
        need_query_times : Nat; // The number of queries needed to get the file
    };

    public type PUT = {
        file_key : Text; // as the key of the map to search file,generated by front-end
        file_name : Text;
        file_extension : Text;
        chunk : Chunk;
        chunk_number : Nat; // the number of all chunks
        chunk_order : Nat; // the number of the current chunk
        total_size : Nat;
    };

    public type GET = {
        file_key : Text; // the key of the map to search file
        flag : Nat; // as the chunk_order
    };

    public type DataErr = {
        #MemoryInsufficient;
        #BlobSizeError;
        #FileKeyErr;
        #FlagErr;
    };

};